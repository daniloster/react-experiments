function isUser(auth, userKey) {
  return auth.uid == userKey;
}

function isAdmin(auth) {
  return root.child('users').child(auth.uid).child('isAdmin').val() == true;
}

function isLogged(auth) {
  return auth != null;
}

function isPetOwner(auth, petUid) {
  return root.child('pets').child(petUid).child('ownerId').val() == auth.uid;
}

function isNewPet(uid) {
  return !root.child('pets').child(uid).val();
}

path / {
  read() { true }
}

path /users/{uid} {
  read() { isUser(auth, uid) || isAdmin(auth) }
  write() { true }
  index() { ["email"] }
}

path /users/{uid}/isAdmin {
  read() { isUser(auth, uid) || isAdmin(auth) }
  write() { isAdmin(auth) }
}

path /pets/{uid} {
  read() { isLogged(auth) && (isAdmin(auth) || isPetOwner(auth, uid)) }
  write() { (isLogged(auth) && isNewPet(uid)) || isAdmin(auth) }
}

path /items/{uid} {
  read() { isLogged(auth) }
  write() { isAdmin(auth) }
}

path /schedule-types/{uid} {
  read() { isLogged(auth) }
  write() { isAdmin(auth) }
}

